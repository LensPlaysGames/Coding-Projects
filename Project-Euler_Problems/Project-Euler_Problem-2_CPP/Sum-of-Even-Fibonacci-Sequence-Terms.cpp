/*
Title: Sum-of-Even-Fibonacci-Sequence-Terms
Desc: My Solve of Problem 2 from Project Euler Archive in C++

Project Euler Problem Desc:
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

CODE BY LENS
*/

#include <vector>
#include <iostream>
#include <string>       // Not Needed but Used for Couting Prettier

using namespace std;

vector<int> get_fib_sequence_under(int max) {
    vector<int> output; // Initialize List to Store Sequence Terms

    int nth = 1;        // n-th term of Fibonacci Sequence (n1 + n2)   (starts at 3rd term)
    int n1 = 1;         // (n - 1)th term of Fibonacci Seqence         (starts at 2nd term)
    int n2 = 0;         // (n - 2)th term of Fibonacci Seqence         (starts at 1st term)

    while (n2 < max)    // Iterator
    {
        output.push_back(n2);   // Store Sequence Term

        nth = n1 + n2;          // Get Nth term
        n2 = n1;                // Slide (n - 2) Up to (n - 1)
        n1 = nth;               // Slide (n - 1) Up to n
    }
    return output;
}

vector<int> get_evens(vector<int> l) {
    vector<int> evens;                              // Initialize List to Store All Even Terms in Given Ints
    for (auto i = l.begin(); i != l.end(); i++)     // Iterator
    {
        if ((*i % 2) == 0) {
            evens.push_back(*i);
        }
    }
    return evens;
}

int get_sum_of_ints(vector<int> l) {
    int sum = 0;                                // Initialize Sum to Return
    for (auto i = l.begin(); i < l.end(); i++)  // Iterator
    {
        sum += *i;      // Add to Sum at Each Index
    }
    return sum;
}

void print_ints(vector<int> ints, string prefix="") {
    if (prefix != "") {                         // Check for Prefix
        cout << prefix << "\n\n";                             // Output Prefix if it Exists
    }
    for (auto i = ints.begin(); i < ints.end(); i++)  // Iterator
    {
        cout << *i << "\n";     // Output Value at i in ints
    }
}

int main() {
    // Get Values
    vector<int> fib_seq = get_fib_sequence_under(4000000);
    vector<int> fib_seq_evens = get_evens(fib_seq);
    int evens_sum = get_sum_of_ints(fib_seq_evens);

    // Print Values
    print_ints(fib_seq, "\nFibonacci Sequence: ");
    print_ints(fib_seq_evens, "\nEven Numbers In Fibonacci Sequence: ");
    cout << "\n\n Sum of All Even Numbers in Fibonacci Sequence Below 4000000 is " << evens_sum << "\n";

    return 0;
}